; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\objects\application.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\application.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\app -I..\bsp -I..\common -I..\cortex-m3 -I..\rt_thread\include -I..\STM32F10x_StdPeriph_Driver\inc -IF:\work\Keil_rtthread_experient\mdk\RTE -ID:\EngineeringSoftware\Keil_core\ARM\PACK\Keil\STM32F1xx_DFP\2.2.0 -ID:\EngineeringSoftware\Keil_core\ARM\CMSIS\Include -D__UVISION_VERSION=514 -DSTM32F10X_MD_VL -DSTM32F10X_MD_VL -DUSE_STDPERIPH_DRIVER --omf_browse=.\objects\application.crf ..\app\application.c]
                          THUMB

                          AREA ||i.led_thread_entry||, CODE, READONLY, ALIGN=2

                  led_thread_entry PROC
;;;47     static struct rt_thread led_thread;
;;;48     static void led_thread_entry(void* parameter)
000000  2400              MOVS     r4,#0
;;;49     {
;;;50         unsigned int count=0;
;;;51     
;;;52         rt_hw_led_init();
000002  f7fffffe          BL       rt_hw_led_init
;;;53     
;;;54         while (1)
000006  e013              B        |L1.48|
                  |L1.8|
;;;55         {
;;;56             /* led1 on */
;;;57     #ifndef RT_USING_FINSH
;;;58             rt_kprintf("led on, count : %d\r\n",count);
000008  4621              MOV      r1,r4
00000a  a00a              ADR      r0,|L1.52|
00000c  f7fffffe          BL       rt_kprintf
;;;59     #endif
;;;60             count++;
000010  1c64              ADDS     r4,r4,#1
;;;61             rt_hw_led_on(0);
000012  2000              MOVS     r0,#0
000014  f7fffffe          BL       rt_hw_led_on
;;;62             rt_thread_delay( RT_TICK_PER_SECOND/2 ); /* sleep 0.5 second and switch to other thread */
000018  2032              MOVS     r0,#0x32
00001a  f7fffffe          BL       rt_thread_delay
;;;63     
;;;64             /* led1 off */
;;;65     #ifndef RT_USING_FINSH
;;;66             rt_kprintf("led off\r\n");
00001e  a00b              ADR      r0,|L1.76|
000020  f7fffffe          BL       rt_kprintf
;;;67     #endif
;;;68             rt_hw_led_off(0);
000024  2000              MOVS     r0,#0
000026  f7fffffe          BL       rt_hw_led_off
;;;69             rt_thread_delay( RT_TICK_PER_SECOND/2 );
00002a  2032              MOVS     r0,#0x32
00002c  f7fffffe          BL       rt_thread_delay
                  |L1.48|
000030  e7ea              B        |L1.8|
;;;70         }
;;;71     }
;;;72     
                          ENDP

000032  0000              DCW      0x0000
                  |L1.52|
000034  6c656420          DCB      "led on, count : %d\r\n",0
000038  6f6e2c20
00003c  636f756e
000040  74203a20
000044  25640d0a
000048  00      
000049  00                DCB      0
00004a  00                DCB      0
00004b  00                DCB      0
                  |L1.76|
00004c  6c656420          DCB      "led off\r\n",0
000050  6f66660d
000054  0a00    
000056  00                DCB      0
000057  00                DCB      0

                          AREA ||i.rt_application_init||, CODE, READONLY, ALIGN=2

                  rt_application_init PROC
;;;138    
;;;139    int rt_application_init(void)
000000  b57f              PUSH     {r0-r6,lr}
;;;140    {
;;;141        rt_thread_t init_thread;
;;;142    
;;;143        rt_err_t result;
;;;144    
;;;145        /* init led thread */
;;;146        result = rt_thread_init(&led_thread,
000002  2005              MOVS     r0,#5
000004  2114              MOVS     r1,#0x14
000006  f44f7200          MOV      r2,#0x200
00000a  4b11              LDR      r3,|L2.80|
00000c  e9cd3200          STRD     r3,r2,[sp,#0]
000010  e9cd1002          STRD     r1,r0,[sp,#8]
000014  2300              MOVS     r3,#0
000016  4a0f              LDR      r2,|L2.84|
000018  a10f              ADR      r1,|L2.88|
00001a  4810              LDR      r0,|L2.92|
00001c  f7fffffe          BL       rt_thread_init
000020  4605              MOV      r5,r0
;;;147                                "led",
;;;148                                led_thread_entry,
;;;149                                RT_NULL,
;;;150                                (rt_uint8_t*)&led_stack[0],
;;;151                                sizeof(led_stack),
;;;152                                20,
;;;153                                5);
;;;154        if (result == RT_EOK)
000022  b915              CBNZ     r5,|L2.42|
;;;155        {
;;;156            rt_thread_startup(&led_thread);
000024  480d              LDR      r0,|L2.92|
000026  f7fffffe          BL       rt_thread_startup
                  |L2.42|
;;;157        }
;;;158    
;;;159    #if (RT_THREAD_PRIORITY_MAX == 32)
;;;160        init_thread = rt_thread_create("init",
00002a  2014              MOVS     r0,#0x14
00002c  2108              MOVS     r1,#8
00002e  020b              LSLS     r3,r1,#8
000030  2200              MOVS     r2,#0
000032  e9cd1000          STRD     r1,r0,[sp,#0]
000036  490a              LDR      r1,|L2.96|
000038  a00a              ADR      r0,|L2.100|
00003a  f7fffffe          BL       rt_thread_create
00003e  4604              MOV      r4,r0
;;;161                                       rt_init_thread_entry, RT_NULL,
;;;162                                       2048, 8, 20);
;;;163    #else
;;;164        init_thread = rt_thread_create("init",
;;;165                                       rt_init_thread_entry, RT_NULL,
;;;166                                       2048, 80, 20);
;;;167    #endif
;;;168    
;;;169        if (init_thread != RT_NULL)
000040  b114              CBZ      r4,|L2.72|
;;;170            rt_thread_startup(init_thread);
000042  4620              MOV      r0,r4
000044  f7fffffe          BL       rt_thread_startup
                  |L2.72|
;;;171    
;;;172        return 0;
000048  2000              MOVS     r0,#0
;;;173    }
00004a  b004              ADD      sp,sp,#0x10
00004c  bd70              POP      {r4-r6,pc}
;;;174    
                          ENDP

00004e  0000              DCW      0x0000
                  |L2.80|
                          DCD      led_stack
                  |L2.84|
                          DCD      led_thread_entry
                  |L2.88|
000058  6c656400          DCB      "led",0
                  |L2.92|
                          DCD      led_thread
                  |L2.96|
                          DCD      rt_init_thread_entry
                  |L2.100|
000064  696e6974          DCB      "init",0
000068  00      
000069  00                DCB      0
00006a  00                DCB      0
00006b  00                DCB      0

                          AREA ||i.rt_init_thread_entry||, CODE, READONLY, ALIGN=1

                  rt_init_thread_entry PROC
;;;89     
;;;90     void rt_init_thread_entry(void* parameter)
000000  b510              PUSH     {r4,lr}
;;;91     {
000002  4604              MOV      r4,r0
;;;92     #ifdef RT_USING_COMPONENTS_INIT
;;;93         /* initialization RT-Thread Components */
;;;94         rt_components_init();
000004  f7fffffe          BL       rt_components_init
;;;95     #endif
;;;96     
;;;97         /* Filesystem Initialization */
;;;98     #if defined(RT_USING_DFS) && defined(RT_USING_DFS_ELMFAT)
;;;99         /* mount sd card fat partition 1 as root directory */
;;;100        if (dfs_mount("sd0", "/", "elm", 0, 0) == 0)
;;;101        {
;;;102            rt_kprintf("File System initialized!\n");
;;;103        }
;;;104        else
;;;105            rt_kprintf("File System initialzation failed!\n");
;;;106    #endif  /* RT_USING_DFS */
;;;107    
;;;108    #ifdef RT_USING_RTGUI
;;;109        {
;;;110            extern void rt_hw_lcd_init();
;;;111            extern void rtgui_touch_hw_init(void);
;;;112    
;;;113            rt_device_t lcd;
;;;114    
;;;115            /* init lcd */
;;;116            rt_hw_lcd_init();
;;;117    
;;;118            /* init touch panel */
;;;119            rtgui_touch_hw_init();
;;;120    
;;;121            /* find lcd device */
;;;122            lcd = rt_device_find("lcd");
;;;123    
;;;124            /* set lcd device as rtgui graphic driver */
;;;125            rtgui_graphic_set_device(lcd);
;;;126    
;;;127    #ifndef RT_USING_COMPONENTS_INIT
;;;128            /* init rtgui system server */
;;;129            rtgui_system_server_init();
;;;130    #endif
;;;131    
;;;132            calibration_set_restore(cali_setup);
;;;133            calibration_set_after(cali_store);
;;;134            calibration_init();
;;;135        }
;;;136    #endif /* #ifdef RT_USING_RTGUI */
;;;137    }
000008  bd10              POP      {r4,pc}
;;;138    
                          ENDP


                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  led_stack
                          %        512
                  led_thread
                          %        128
