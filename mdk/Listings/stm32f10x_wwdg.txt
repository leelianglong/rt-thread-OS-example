; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\objects\stm32f10x_wwdg.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\stm32f10x_wwdg.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\app -I..\bsp -I..\common -I..\cortex-m3 -I..\rt_thread\include -I..\STM32F10x_StdPeriph_Driver\inc -IF:\work\Keil_rtthread_experient\mdk\RTE -ID:\EngineeringSoftware\Keil_core\ARM\PACK\Keil\STM32F1xx_DFP\2.2.0 -ID:\EngineeringSoftware\Keil_core\ARM\CMSIS\Include -D__UVISION_VERSION=514 -DSTM32F10X_MD_VL -DSTM32F10X_MD_VL -DUSE_STDPERIPH_DRIVER --omf_browse=.\objects\stm32f10x_wwdg.crf ..\STM32F10x_StdPeriph_Driver\src\stm32f10x_wwdg.c]
                          THUMB

                          AREA ||i.WWDG_ClearFlag||, CODE, READONLY, ALIGN=2

                  WWDG_ClearFlag PROC
;;;206      */
;;;207    void WWDG_ClearFlag(void)
000000  2000              MOVS     r0,#0
;;;208    {
;;;209      WWDG->SR = (uint32_t)RESET;
000002  4901              LDR      r1,|L1.8|
000004  6008              STR      r0,[r1,#0]
;;;210    }
000006  4770              BX       lr
;;;211    
                          ENDP

                  |L1.8|
                          DCD      0x40002c08

                          AREA ||i.WWDG_DeInit||, CODE, READONLY, ALIGN=1

                  WWDG_DeInit PROC
;;;101      */
;;;102    void WWDG_DeInit(void)
000000  b510              PUSH     {r4,lr}
;;;103    {
;;;104      RCC_APB1PeriphResetCmd(RCC_APB1Periph_WWDG, ENABLE);
000002  2101              MOVS     r1,#1
000004  02c8              LSLS     r0,r1,#11
000006  f7fffffe          BL       RCC_APB1PeriphResetCmd
;;;105      RCC_APB1PeriphResetCmd(RCC_APB1Periph_WWDG, DISABLE);
00000a  2100              MOVS     r1,#0
00000c  f44f6000          MOV      r0,#0x800
000010  f7fffffe          BL       RCC_APB1PeriphResetCmd
;;;106    }
000014  bd10              POP      {r4,pc}
;;;107    
                          ENDP


                          AREA ||i.WWDG_Enable||, CODE, READONLY, ALIGN=2

                  WWDG_Enable PROC
;;;184      */
;;;185    void WWDG_Enable(uint8_t Counter)
000000  b510              PUSH     {r4,lr}
;;;186    {
000002  4604              MOV      r4,r0
;;;187      /* Check the parameters */
;;;188      assert_param(IS_WWDG_COUNTER(Counter));
000004  2c40              CMP      r4,#0x40
000006  db02              BLT      |L3.14|
000008  2c7f              CMP      r4,#0x7f
00000a  dc00              BGT      |L3.14|
00000c  e003              B        |L3.22|
                  |L3.14|
00000e  21bc              MOVS     r1,#0xbc
000010  a003              ADR      r0,|L3.32|
000012  f7fffffe          BL       assert_failed
                  |L3.22|
;;;189      WWDG->CR = CR_WDGA_Set | Counter;
000016  f0440080          ORR      r0,r4,#0x80
00001a  490e              LDR      r1,|L3.84|
00001c  6008              STR      r0,[r1,#0]
;;;190    }
00001e  bd10              POP      {r4,pc}
;;;191    
                          ENDP

                  |L3.32|
000020  2e2e5c53          DCB      "..\\STM32F10x_StdPeriph_Driver\\src\\stm32f10x_wwdg.c",0
000024  544d3332
000028  46313078
00002c  5f537464
000030  50657269
000034  70685f44
000038  72697665
00003c  725c7372
000040  635c7374
000044  6d333266
000048  3130785f
00004c  77776467
000050  2e6300  
000053  00                DCB      0
                  |L3.84|
                          DCD      0x40002c00

                          AREA ||i.WWDG_EnableIT||, CODE, READONLY, ALIGN=2

                  WWDG_EnableIT PROC
;;;158      */
;;;159    void WWDG_EnableIT(void)
000000  2001              MOVS     r0,#1
;;;160    {
;;;161      *(__IO uint32_t *) CFR_EWI_BB = (uint32_t)ENABLE;
000002  4901              LDR      r1,|L4.8|
000004  6008              STR      r0,[r1,#0]
;;;162    }
000006  4770              BX       lr
;;;163    
                          ENDP

                  |L4.8|
                          DCD      0x420580a4

                          AREA ||i.WWDG_GetFlagStatus||, CODE, READONLY, ALIGN=2

                  WWDG_GetFlagStatus PROC
;;;196      */
;;;197    FlagStatus WWDG_GetFlagStatus(void)
000000  4801              LDR      r0,|L5.8|
;;;198    {
;;;199      return (FlagStatus)(WWDG->SR);
000002  6800              LDR      r0,[r0,#0]
000004  b2c0              UXTB     r0,r0
;;;200    }
000006  4770              BX       lr
;;;201    
                          ENDP

                  |L5.8|
                          DCD      0x40002c08

                          AREA ||i.WWDG_SetCounter||, CODE, READONLY, ALIGN=2

                  WWDG_SetCounter PROC
;;;169      */
;;;170    void WWDG_SetCounter(uint8_t Counter)
000000  b510              PUSH     {r4,lr}
;;;171    {
000002  4604              MOV      r4,r0
;;;172      /* Check the parameters */
;;;173      assert_param(IS_WWDG_COUNTER(Counter));
000004  2c40              CMP      r4,#0x40
000006  db02              BLT      |L6.14|
000008  2c7f              CMP      r4,#0x7f
00000a  dc00              BGT      |L6.14|
00000c  e003              B        |L6.22|
                  |L6.14|
00000e  21ad              MOVS     r1,#0xad
000010  a003              ADR      r0,|L6.32|
000012  f7fffffe          BL       assert_failed
                  |L6.22|
;;;174      /* Write to T[6:0] bits to configure the counter value, no need to do
;;;175         a read-modify-write; writing a 0 to WDGA bit does nothing */
;;;176      WWDG->CR = Counter & BIT_Mask;
000016  f004007f          AND      r0,r4,#0x7f
00001a  490e              LDR      r1,|L6.84|
00001c  6008              STR      r0,[r1,#0]
;;;177    }
00001e  bd10              POP      {r4,pc}
;;;178    
                          ENDP

                  |L6.32|
000020  2e2e5c53          DCB      "..\\STM32F10x_StdPeriph_Driver\\src\\stm32f10x_wwdg.c",0
000024  544d3332
000028  46313078
00002c  5f537464
000030  50657269
000034  70685f44
000038  72697665
00003c  725c7372
000040  635c7374
000044  6d333266
000048  3130785f
00004c  77776467
000050  2e6300  
000053  00                DCB      0
                  |L6.84|
                          DCD      0x40002c00

                          AREA ||i.WWDG_SetPrescaler||, CODE, READONLY, ALIGN=2

                  WWDG_SetPrescaler PROC
;;;117      */
;;;118    void WWDG_SetPrescaler(uint32_t WWDG_Prescaler)
000000  b570              PUSH     {r4-r6,lr}
;;;119    {
000002  4604              MOV      r4,r0
;;;120      uint32_t tmpreg = 0;
000004  2500              MOVS     r5,#0
;;;121      /* Check the parameters */
;;;122      assert_param(IS_WWDG_PRESCALER(WWDG_Prescaler));
000006  b13c              CBZ      r4,|L7.24|
000008  2c80              CMP      r4,#0x80
00000a  d005              BEQ      |L7.24|
00000c  f5b47f80          CMP      r4,#0x100
000010  d002              BEQ      |L7.24|
000012  f5b47fc0          CMP      r4,#0x180
000016  d100              BNE      |L7.26|
                  |L7.24|
000018  e003              B        |L7.34|
                  |L7.26|
00001a  217a              MOVS     r1,#0x7a
00001c  a005              ADR      r0,|L7.52|
00001e  f7fffffe          BL       assert_failed
                  |L7.34|
;;;123      /* Clear WDGTB[1:0] bits */
;;;124      tmpreg = WWDG->CFR & CFR_WDGTB_Mask;
000022  4811              LDR      r0,|L7.104|
000024  6800              LDR      r0,[r0,#0]
000026  f42075c0          BIC      r5,r0,#0x180
;;;125      /* Set WDGTB[1:0] bits according to WWDG_Prescaler value */
;;;126      tmpreg |= WWDG_Prescaler;
00002a  4325              ORRS     r5,r5,r4
;;;127      /* Store the new value */
;;;128      WWDG->CFR = tmpreg;
00002c  480e              LDR      r0,|L7.104|
00002e  6005              STR      r5,[r0,#0]
;;;129    }
000030  bd70              POP      {r4-r6,pc}
;;;130    
                          ENDP

000032  0000              DCW      0x0000
                  |L7.52|
000034  2e2e5c53          DCB      "..\\STM32F10x_StdPeriph_Driver\\src\\stm32f10x_wwdg.c",0
000038  544d3332
00003c  46313078
000040  5f537464
000044  50657269
000048  70685f44
00004c  72697665
000050  725c7372
000054  635c7374
000058  6d333266
00005c  3130785f
000060  77776467
000064  2e6300  
000067  00                DCB      0
                  |L7.104|
                          DCD      0x40002c04

                          AREA ||i.WWDG_SetWindowValue||, CODE, READONLY, ALIGN=2

                  WWDG_SetWindowValue PROC
;;;136      */
;;;137    void WWDG_SetWindowValue(uint8_t WindowValue)
000000  b538              PUSH     {r3-r5,lr}
;;;138    {
000002  4604              MOV      r4,r0
;;;139      __IO uint32_t tmpreg = 0;
000004  2000              MOVS     r0,#0
000006  9000              STR      r0,[sp,#0]
;;;140    
;;;141      /* Check the parameters */
;;;142      assert_param(IS_WWDG_WINDOW_VALUE(WindowValue));
000008  2c7f              CMP      r4,#0x7f
00000a  dc00              BGT      |L8.14|
00000c  e003              B        |L8.22|
                  |L8.14|
00000e  218e              MOVS     r1,#0x8e
000010  a008              ADR      r0,|L8.52|
000012  f7fffffe          BL       assert_failed
                  |L8.22|
;;;143      /* Clear W[6:0] bits */
;;;144    
;;;145      tmpreg = WWDG->CFR & CFR_W_Mask;
000016  4814              LDR      r0,|L8.104|
000018  6800              LDR      r0,[r0,#0]
00001a  f020007f          BIC      r0,r0,#0x7f
00001e  9000              STR      r0,[sp,#0]
;;;146    
;;;147      /* Set W[6:0] bits according to WindowValue value */
;;;148      tmpreg |= WindowValue & (uint32_t) BIT_Mask;
000020  f004007f          AND      r0,r4,#0x7f
000024  9900              LDR      r1,[sp,#0]
000026  4308              ORRS     r0,r0,r1
000028  9000              STR      r0,[sp,#0]
;;;149    
;;;150      /* Store the new value */
;;;151      WWDG->CFR = tmpreg;
00002a  490f              LDR      r1,|L8.104|
00002c  9800              LDR      r0,[sp,#0]
00002e  6008              STR      r0,[r1,#0]
;;;152    }
000030  bd38              POP      {r3-r5,pc}
;;;153    
                          ENDP

000032  0000              DCW      0x0000
                  |L8.52|
000034  2e2e5c53          DCB      "..\\STM32F10x_StdPeriph_Driver\\src\\stm32f10x_wwdg.c",0
000038  544d3332
00003c  46313078
000040  5f537464
000044  50657269
000048  70685f44
00004c  72697665
000050  725c7372
000054  635c7374
000058  6d333266
00005c  3130785f
000060  77776467
000064  2e6300  
000067  00                DCB      0
                  |L8.104|
                          DCD      0x40002c04
